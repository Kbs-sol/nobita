-- Doraemon Movie Streaming Website Database Schema
-- Initial migration for movies, blogs, analytics, and admin system

-- Admin roles and authentication
CREATE TABLE IF NOT EXISTS admin_roles (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  password_hash TEXT NOT NULL,
  role TEXT NOT NULL CHECK (role IN ('superadmin', 'admin')),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  last_login DATETIME,
  is_active INTEGER DEFAULT 1,
  created_by INTEGER REFERENCES admin_roles(id)
);

-- Movies table for storing all movie information
CREATE TABLE IF NOT EXISTS movies (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL,
  year INTEGER,
  description TEXT,
  characters TEXT, -- JSON string of characters list
  thumbnail_url TEXT,
  telegram_file_id TEXT, -- Telegram file ID for streaming
  telegram_url TEXT, -- Direct Telegram URL for backup
  ott_availability TEXT, -- JSON string of OTT platforms
  genre TEXT DEFAULT 'Animation',
  duration_minutes INTEGER,
  rating REAL DEFAULT 0.0,
  view_count INTEGER DEFAULT 0,
  download_count INTEGER DEFAULT 0,
  is_active INTEGER DEFAULT 1,
  release_date DATE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by INTEGER REFERENCES admin_roles(id)
);

-- AI-generated blog posts for each movie
CREATE TABLE IF NOT EXISTS movie_blogs (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  movie_id INTEGER NOT NULL REFERENCES movies(id) ON DELETE CASCADE,
  title TEXT NOT NULL,
  content TEXT NOT NULL, -- HTML content generated by AI
  summary TEXT, -- Short summary for meta tags
  keywords TEXT, -- SEO keywords
  view_count INTEGER DEFAULT 0,
  is_published INTEGER DEFAULT 1,
  generated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  generated_by_ai INTEGER DEFAULT 1,
  openrouter_model TEXT DEFAULT 'gpt-3.5-turbo'
);

-- User sessions for ad tracking (anonymous)
CREATE TABLE IF NOT EXISTS user_sessions (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  session_id TEXT UNIQUE NOT NULL,
  ip_address TEXT,
  user_agent TEXT,
  ads_watched INTEGER DEFAULT 0,
  movies_unlocked TEXT, -- JSON array of unlocked movie IDs
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  last_activity DATETIME DEFAULT CURRENT_TIMESTAMP,
  expires_at DATETIME
);

-- Analytics for tracking user behavior
CREATE TABLE IF NOT EXISTS analytics (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  event_type TEXT NOT NULL, -- 'page_view', 'blog_view', 'movie_view', 'download', 'ad_watch'
  entity_type TEXT, -- 'movie', 'blog', 'homepage'
  entity_id INTEGER, -- movie_id or blog_id
  session_id TEXT REFERENCES user_sessions(session_id),
  ip_address TEXT,
  user_agent TEXT,
  referrer TEXT,
  additional_data TEXT, -- JSON for extra tracking data
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Ad interaction tracking
CREATE TABLE IF NOT EXISTS ad_interactions (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  session_id TEXT REFERENCES user_sessions(session_id),
  movie_id INTEGER REFERENCES movies(id),
  ad_type TEXT, -- 'watch_unlock', 'download_unlock'
  ad_network TEXT, -- 'google_adsense', 'other'
  ad_unit_id TEXT,
  interaction_type TEXT, -- 'impression', 'click', 'completion'
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Cron job tracking for automation
CREATE TABLE IF NOT EXISTS cron_jobs (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  job_name TEXT UNIQUE NOT NULL,
  last_run DATETIME,
  next_run DATETIME,
  status TEXT DEFAULT 'pending', -- 'pending', 'running', 'completed', 'failed'
  error_message TEXT,
  run_count INTEGER DEFAULT 0,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Cache management for performance
CREATE TABLE IF NOT EXISTS cache_entries (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  cache_key TEXT UNIQUE NOT NULL,
  cache_value TEXT NOT NULL,
  expires_at DATETIME,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_movies_year ON movies(year);
CREATE INDEX IF NOT EXISTS idx_movies_active ON movies(is_active);
CREATE INDEX IF NOT EXISTS idx_movies_rating ON movies(rating DESC);
CREATE INDEX IF NOT EXISTS idx_movies_view_count ON movies(view_count DESC);

CREATE INDEX IF NOT EXISTS idx_movie_blogs_movie_id ON movie_blogs(movie_id);
CREATE INDEX IF NOT EXISTS idx_movie_blogs_published ON movie_blogs(is_published);

CREATE INDEX IF NOT EXISTS idx_user_sessions_session_id ON user_sessions(session_id);
CREATE INDEX IF NOT EXISTS idx_user_sessions_expires ON user_sessions(expires_at);

CREATE INDEX IF NOT EXISTS idx_analytics_event_type ON analytics(event_type);
CREATE INDEX IF NOT EXISTS idx_analytics_created_at ON analytics(created_at);
CREATE INDEX IF NOT EXISTS idx_analytics_session_id ON analytics(session_id);

CREATE INDEX IF NOT EXISTS idx_ad_interactions_session_id ON ad_interactions(session_id);
CREATE INDEX IF NOT EXISTS idx_ad_interactions_movie_id ON ad_interactions(movie_id);

CREATE INDEX IF NOT EXISTS idx_cache_entries_key ON cache_entries(cache_key);
CREATE INDEX IF NOT EXISTS idx_cache_entries_expires ON cache_entries(expires_at);

-- Insert default superadmin user
-- Password: admin123 (hashed with SHA-256 + salt)
-- In production, change the password immediately!
INSERT OR REPLACE INTO admin_roles (id, username, password_hash, role, created_at, is_active)
VALUES (
  1, 
  'superadmin',
  '240be518fabd2724ddb6f04eeb1da5967448d7e831c08c8fa822809f74c720a9', -- SHA-256 of 'admin123' (change this!)
  'superadmin',
  CURRENT_TIMESTAMP,
  1
);